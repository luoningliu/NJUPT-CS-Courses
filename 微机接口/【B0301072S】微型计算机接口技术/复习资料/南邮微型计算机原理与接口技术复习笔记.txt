1-4章

1.没有-0的补码，8位二进制时-128的补码就是1000 0000

2.补码的补码等于原码

3.（x+y）补=x补+y补

4.溢出：运算结果超出了运算器所能表示的范围

5.CPU判溢：如加数与被加数的最高位相同，却与结果的最高位相异，则将溢出标志置为1

6.程序员判溢：
  如果参与运算的数是无符号数，则判进位标志，进位标志=1，表示溢出错；
  如果参与运算的数是有符号数，则判溢出标志，溢出标志=1，表示溢出错。

7.变质寻址中，比例因子只能是1、2、4、8中的一个数

8.对于MOV指令，立即数不能直接送段寄存器；
  不允许在两个段寄存器之间传送数据

9.对各操作指令是否影响标志位的总结：

（1）传送指令（MOV、LEA等）：不影响
（2）堆栈指令（PUSH、POP）：POPF影响，其他不影响
（3）算数指令
  1）加法指令：影响6个（INC不影响C标志）
  2）减法指令：影响6个（DEC不影响C标志）
  3）求补指令：影响6个
  4）比较指令：影响6个
  5）乘法指令：影响O、C标志
  6）除法指令：不影响
  7）BCD码调整指令：影响（具体影响位见第10点内）
（4）逻辑运算指令：
  1）逻辑运算（AND、OR、NOT、XOR、TEST）除NOT不影响标志位外，均影响OSZPC标志（即除A标志外，并且其中O、C置0）
  2）一般移位指令（SHL、SAL、SHR、SAR）均影响OSZPC（即除A标志外）
  3）循环移位指令（ROL、ROR、RCL、RCR）均只影响O、C标志
（5）转移和调用指令：不影响

10.需要掌握的指令集

一.传送类指令
（1）通用传送
  1）数据传送MOV
  2）地址传送LEA
  3）交换指令XCHG
  4）查表指令XLAT（查找的是数据段中的字节表，EBX/BX=表头有效地址，AL=元素对表头偏移地址）

（2）堆栈指令（操作数必须是字或者双字。
		SP指向的是最后推入堆栈的信息的所在单元，注意进栈时SP向低位移动，即向低地址方向延伸。
		入栈时先入高位后入低位，出栈时相反）
  1）进栈PUSH
  2）出栈POP
  3）标志寄存器出入栈PUSHF/POPF
  4）通用寄存器保护现场PUSHA/POPA

二.算数运算指令
  1）加法ADD、ADC、INC（INC将操作数视为无符号数，不影响C标志）
  2）减法SUB、SBB、DEC（同上）
  3）求补指令NEG（即求负数）
  4）比较指令CMP（同SUB，但不保存结果）
  5）乘法指令MUL（无符号乘法，隐含目的操作数DX、AX，源操作数不能是立即数）、IMUL（带符号乘法，隐含目的操作数DX、AX，源操作数不能是立即数）
  6）除法指令DIV（无符号除法，同上）、IDIV（有符号除法，同上）
  7）BCD码调整指令：
	加法：DAA（组合BCD，影响除O标志外的标志位）、AAA（未组合BCD，只影响A、C标志位）
	减法：DAS（组合BCD，影响除O标志外的标志位）、AAS（未组合BCD，只影响A、C标志位）
	乘法：AAM（未组合BCD，只影响P、S、Z标志位）
	除法：AAD（未组合BCD，只影响P、S、Z标志位）

三.逻辑运算指令
（1）逻辑运算指令
     逻辑与AND、逻辑或OR、逻辑非NOT、逻辑异或XOR、测试TEST（进行AND运算，但结果不送入目标操作数）
（2）移位指令：书P101

四.转移和调用指令
（1）无条件转移JMP
（2）条件转移（括号内为转移条件）
  1）单个条件标志：JZ/JNZ、JS/JNS、JO/JNO、JP/JNP、JCXZ（CX=0转移）
  2）无符号数大小比较（前跟CMP）：JC（小于）/JNC（不小于）、JA（大于）/JNA（不大于）
  3）有符号数大小比较（前跟CMP）：JL（小于）/JLE（不小于）、JG（大于）/JGE（不大于）
（3）循环控制转移
  1）LOOP：CX不等于0转移
  2）LOOPZ/LOOPE：CX不等于0且Z=1转移
  3）LOOPNZ/LOOPNE：CX不等于0且Z=0转移
（4）子程序调用CALL/返回RET（注意子程序定义格式PROC/ENDP）
	调用时可以间接转移，如BX存储转移地址
	注意调用时将IP存于堆栈段
	带返回参数的RET EXP：即释放多余的参数占用的堆栈空间（见第三章PPT第170页）

五.串操作指令
（1）串传送：把DS:[SI]的若干元素→ES:[DI]的若干单元 MOVSB/MOVSW/MOVSD（传送一个元素后CPU自动修改SI、DI，D标志为0时SI、DI自增，D标志为1自减）
	     有重复前缀的格式：如REP MOVSB，以CX为计数器
（2）串装入：LODSB DS:[SI]→AL  LODSW DS:[SI]→AX  LODSD DS:[SI]→EAX（同样根据D标志决定方向）
（3）串存储：STOSB AL→ES:[DI]1个单元  STOSW AX→ES:[SI]2个单元  STOSD EAX→ES:[DI]4个单元（D标志决定方向）
	     同样有重复前缀格式REP STOSB/STOSW/STOSD，CX为计数器
（4）串比较：源串地址→DS:[SI]，目串地址→ES:[DI]，D标志决定方向
	     CMPSB：字节串比较  CMPSW：字串比较  CMPSD：双字比较
	     结果是根据比较量元素是否相等，相等则Z标志置1，不等置0
	     同样有重复前缀REPE（相等则继续循环）/REPNE（不等则继续循环） CMPSB/CMPSW/CMPSD（CX为计数器）
（5）串搜索：在ES:[DI]的目标区搜索是否有规定的关键字，目标地址→ES[DI]，D决定方向，关键字→AL/AX/EAX
	     SCASB/SCASW/SCASD，如果找到关键字，则Z标志置1，否则置0
	     同样有重复前缀格式REPE/REPNE SCASB/SCASW/SCASD，CX为计数器

六.处理机控制指令
（1）标志处理指令
  1）CLC/STC：C标志置0/1
  2）CMC：C标志取反
  3）CLD/STD：D标志置0/1
  4）CLI/STI：I标志置0/1
（2）其他处理指令
  1）WAIT：处理器等待
  2）ESC：处理器交权
  3）LOCK：封锁总线
  4）HLT：处理器暂停
  5）NOP：空操作指令

11.完整的段定义格式
	.586
DATA SEGMENT USE16
	...
DATA ENDS
CODE SEGMENT USE16
	ASSUME CS:CODE,DS:DATA
BEG:	MOV AX,DATA
	MOV DS,AX
	...
	MOV AH,4CH
	INT 21H
CODE ENDS
	END BEG;汇编结束语句，注意位置
（注意一下定位参数、链接参数、分类名、段长度【USE16表示单元有效地址为16位】的含义，尤其是AT表达式【表示段基址，常配合ORG使用】。
  定位伪指令ORG用于通知汇编程序将下一条指令或数据存放在表达式给出的偏移地址。
  如果有堆栈段的话，堆栈段的链接属性应为STACK，分类名为'STACK'且不能省略。
  EXE文件汇编源程序必须有堆栈段，否则发出警告）
（注意：COM文件编程格式要求使用定位ORG伪指令将程序的启动指令放在代码段偏移地址为100H的单元）

12.DOS调用
格式：
MOV AH,功能号
...;设置入口参数
INT 21H;执行DOS调用
...;分析利用出口参数

（1）01H：等待键入一个字符并回显，响应Ctrl_C
入口参数：无			出口参数：AL=按键ASCII码
（2）02H：显示一个字符，响应Ctrl_C（且该功能破坏AL寄存器内容）
入口参数：DL=待显字符ASCII码	出口参数：无
（3）07H：等待键入一个字符且无回显，不响应Ctrl_C
入口参数：无			出口参数：AL=按键ASCII码
（4）08H：等待键入一个字符且无回显，响应Ctrl_C
入口参数：无			出口参数：AL=按键ASCII码
（5）09H：显示字符串，响应Ctrl_C（破坏AL寄存器内容）
入口参数：DS:DX=字符串首地址（必须以$结束） 出口参数：无
（6）0AH：等待键入一串字符串送入用户数据缓冲区
入口参数：DS:DX=缓冲区首地址	出口参数：存放于缓冲区的字符串
缓冲区定义格式：【缓冲区能容纳的字符个数】【实际接收的字符个数】【接收的内容...】

13.BIOS调用
格式：
MOV AH,功能号
...;设置入口参数
INT n（如10H/16H，代表不同设备驱动程序）
...;分析出口参数

键盘输入功能INT 16H
（1）00H：读取键入的一个字符，无回显，响应Ctrl_C
入口参数：无			出口参数：AL=键入字符的ASCII码
（2）01H：查询键盘缓冲区（常用于检查有无键入以停止程序运行）
入口参数：无			出口参数：Z标志0/1表示有/无键入

屏幕功能调用INT 10H
（大概了解彩色编码）
（1）0EH：显示一个字符（等价于DOS的02H）
入口参数：AL=待显字符的ASCII码	出口参数：无
（2）13H：显示字符串
入口参数：AL=0~3，BH=显示页号，BL=属性字（当AL=0、1时有效），CX=串长度，DH、DL=字符串显示的起始行/列号，ES：BP=待显示字符串首地址  出口参数：无

14.宏指令
格式：
宏指令名称 	MACRO	哑元表；哑元表可省略
		LOCAL 	标号名表；此伪指令可省略
		宏体
		ENDM

对于LOCAL，出现的标号为局部标号，允许与源程序中其他标号/变量重名

与子程序的区别：子程序的调用是由CPU完成的，宏指令是在汇编过程中由汇编程序完成的
哑元是没有值的符号，调用时宏指令行要有和哑元一一对应的实元表



5-8及11章

1.总线分为：地址总线、数据总线、控制总线

2.有若干片128KB SRAM芯片，如要构成512KB存储器，问:需要(4)片SRAM？如该512KB存储器的起始地址是10000H，最后一个单元的地址是(8FFFF)H 。
  如内存按字节编址，用存储容量为32K×8的存储芯片构成地址为A0000H至EFFFFH的存储空间，则需要多少片？（10）

3.接口电路的功能
（1）数据缓冲功能
（2）联络功能
（3）寻址功能
（4）数据转换功能
（5）中断管理功能

4.端口：接口电路中，能与CPU交换信息的寄存器
（1）数据端口（必须有）
（2）状态端口
（3）控制端口

5.端口的编址方式有：
（1）统一编址：把I/O端口作为存储器的一个单元来看待
（2）独立编址（PC机采用，端口地址没有分段的概念）
特点：
1）I/O端口不占用存储空间
2）CPU要有专门的I/O指令访问

6.I/O指令
CPU可用于交换信息的寄存器：AL、AX、EAX
（1）直接寻址I/O指令（端口地址为8位）
IN AL,PORT（可以为直接地址号，即立即数）
OUT PORT,AL
（2）DX间址I/O指令（端口地址为16位，必须放在DX中，注意：寻址时不可用[]）
IN AL,DX
OUT DX,AL

7.微机系统与外设交换信息的方式
（1）无条件传送：即假设外设已准备好

（2）查询方式：确认具备输入输出条件后才传送
RSCAN : MOV  DX ,200H
        IN   AL ,DX
        TEST AL ,80H
        JZ   RSCAN
        MOV  DX ,201H
        IN   AL ,DX

（3）中断方式
特点：
1）在外设没作好数据传送准备时，CPU可执行与传送数据无关的其他指令
2）当外设作好传送准备后，主动向CPU请求中断
3）若CPU响应这一请求，则暂停正在运行的程序，转入中断服务程序，完成数据传送
4）服务完毕后，自动返回原来运行的程序

（4）DMA（存储器直接存取）方式
特点：
1）用硬件实现在外设与内存间直接进行数据交换，而不通过CPU，速度快
2）数据传送的速度上限取决于存储器的工作速度

8.8254芯片
（1）8254内部有三个16位的计数器，CLK信号的下降沿使计数器减1，即计数一次
	N=f（clk）/f（out）	0<=>65536

（2）端口地址的最后两位用于选择芯片中的寄存器
A1A0	寄存器
00	0#计数器
01	1#计数器
10	2#计数器
11	控制字寄存器

（3）工作方式
启动方式：软件启动（GATE=1）、硬件启动（GATE=0→1）
1）方式2：分频器/脉冲发生器
属于软件启动，输出周期脉冲
具有初值自动重装功能：计数值减到1时，OUT输出低电平，经过一个CLK周期，又变为高电平，初值自动重装
2）方式3：方波发生器
属于软件启动，具有初值自动重装功能
①当计数初值为偶数时，每来一个CLK脉冲，计数值减2，减到0时输出端改变极性，初值自动重装，输出1：1方波，脉宽均为N/2个CLK周期
②当计数初值为奇数时，正脉冲宽度=T（CLK）*（N+1）/2，负脉冲宽度=T（CLK）*（N-1）/2
  实际装入的初值以及自动重装的初值为写入的初值减1；输出正脉冲期间，每一个T（CLK）使计数值减2，减到-2时，输出端变低电平并自动重装。

（4）方式控制字
1）计数器选择D7 D6
00	0#计数器
01	1#计数器
10	2#计数器
11	读出控制字

2）读写方式选择D5 D4
00	锁存当前计数值
01	只写低8位计数值，高8位置0
10	只写高8位计数值，低8位置0
11	先写低8位，后写高8位

3）工作方式选择D3 D2 D1
000	方式0
001	方式1
X10	方式2
X11	方式3
100	方式4
101	方式5

4）数值选择D0
0	二进制
1	BCD

9.中断源
（1）外部中断源（硬件中断源）
INTR引脚：可屏蔽硬件中断
NMI：非屏蔽硬件中断
（2）内部中断源（软件中断源）
BIOS中断
DOS中断

10.中断向量：前两个字节为中断服务程序入口的偏移地址，后两个字节为程序所在代码段的段基址
   中断向量表：系统存储器地址空间中最低的1KB空间（4*n~4*n+3）

11.写入中断向量的两个方法
（1）自己编写程序
（2）DOS功能
1）35H：读取中断向量
入口参数：AH=35H,AL=中断类型码
出口参数：ES:BX=中断向量
2）25H：写入中断向量
入口参数：AH=25H,AL=中断类型码
	  DS:DX=要写入的中断向量（DS=段基址，DX=偏移地址）
出口参数：无

12.对于非屏蔽硬件中断，CPU自动产生类型码2
   对于可屏蔽硬件中断，当处于开中断的状态下，由中断控制器将类型码送入CPU
   中断子程序返回指令是IRET

13.中断系统应具备的基本功能
（1）对于硬件中断，接口电路应具备“屏蔽”和“开放”的功能，由程序员通过软件去控制
（2）能实现中断判优
（3）能实现中断嵌套
（4）响应中断后，能自动转入中断处理，处理完毕能自动返回断点

14.中断指令
（1）CLI/STI：关/开 中断
（2）INT n：软件中断
（3）IRET：中断返回
（4）INTO：溢出中断
先判断F寄存器中O标志是否为1，如果是则直接调用类型为4的中断子程序，处理溢出中断

15.8259A――处理可屏蔽硬件中断
一.寄存器组
（1）中断请求寄存器（IRR）：Di位置置1表示IRi引脚位置有中断请求信号
（2）中断屏蔽寄存器（IMR）：由程序员写入中断屏蔽字，屏蔽字某位为1则表示该位对应的请求信号不能送达优先权电路
（3）优先权电路：判断哪一个请求级别最高
（4）中断控制电路：
1）当判优电路选中一个中断源时向CPU提出中断请求
2）INTA接收CPU送来的中断响应信号，中断响应信号是2个连续的负脉冲
	第一个负脉冲：使与被选中的中断源对应的ISR的Di置1，IRR的Di置0
	第二个负脉冲：使8259A向CPU送出被选中的中断源的中断类型码
（5）中断服务寄存器（ISR）：记录CPU正为之服务的是哪一个中断源，Di置1表示正准备执行IRi的服务程序

二.工作过程（书P275-276）
注意：执行IRET之前，向8259A写入中断结束命令字，使ISR相应位清零

三.中断管理方式
（1）中断优先级管理方式：完全嵌套方式
（2）中断屏蔽方式：普通屏蔽方式

16.PC中断系统
（1）8259A初始化编程由BIOS完成，应用编程只考虑写入屏蔽字和写入结束命令

（2）8259A中断触发方式：上升沿除法
     中断屏蔽方式：常规屏蔽方式
     优先级管理：完全嵌套方式，即IR0级别最高，IR7级别最低
     中断结束方式：常规结束方式，即在中断服务子程序结束前向8259A送中断结束命令

（3）CPU响应非屏蔽中断的条件：（中断优先级：DMA>非屏蔽>可屏蔽）
1）NMI有中断请求，系统无DMA请求
2）CPU当前指令执行完毕

（4）CPU响应可屏蔽中断条件：
1）INTR引脚有中断请求，NMI无中断请求，无DMA请求
2）CPU当前指令执行完毕
3）CPU出于开中断状态（I标志置1）

（5）可屏蔽中断结构
1）主8259A的IR0：日时钟中断，中断类型08H，来自8254的0#计数器
   从8259A的IR1：用户中断，中断类型71H/0AH

2）主从8259A口地址
	IMR口地址	接收中断结束命令的寄存器的口地址
主	21H		20H
从	0A1H		0A0H

3）中断优先级：主IR0、主IR1、从IR0~7、主IR3~7

4）中断结束字：20H
①接入主8259A的中断源
...
MOV AL,20H
OUT 20H,AL
恢复现场
IRET

②接入从8259A的中断源
...
MOV AL,20H
OUT 20H,AL
OUT 0A0H,AL
恢复 现场
IRET

17.8259A的应用
一.日时钟中断
（1）中断源是系统8254的0#计数器，每55ms又一次中断请求（55ms*18=990ms≈1s）

（2）中断处理流程
1）DS压栈，保护现场，40H→DS
2）对“日时钟计数器”进行一次加1计数
//系统RAM的40:6CH-40:6FH为“日时钟计数器”
3）测算软驱电机的关闭时间
4）执行INT 1CH指令（用户可改写）
5）向主8259A发出常规结束命令20H（置换08H服务程序时需要写入程序以发送结束命令）
6）恢复现场，执行IRET

（3）开发应用时应避免DOS重入
DOS不允许重入，可以不调用INT 21H功能以避免，或调用相应的BIOS功能

（4）恢复1CH时，应注意顺序；若置换08H，则需要在中断服务程序末尾调用一次日时钟中断服务程序以保证系统基础功能

二.用户中断
（1）中断源是系统的ISA总线B4端子引入的中断请求信号

（2）中断类型是71H

（3）中断处理流程
1）开中断，保护现场
2）向从8259A发出中断结束命令20H
MOV AL,20H
OUT 0A0H,AL
3）执行INT 0AH，转向0AH服务程序

（4）用户中断开发应用
1）提供用户中断源
2）开放用户中断
IN AL,0A1H
AND AL,11111101B
OUT 0A1H,AL;从8259A IMR1置0
IN AL,21H
AND AL,11111011B
OUT 21H,AL;主8259A IMR2置0
3）置换中断向量71H/0AH
①若置换0AH，则服务程序结束前只向主8259A送结束命令
②若置换71H，则向主从8259A各送一中断结束命令

18.硬件中断与软件中断的区别
（1）相同点
1）都会引起程序中止
2）CPU获得中断类型码后，自动取出中断向量，执行中断服务程序

（2）不同点
1）引发中断的方式不同
硬件中断是由CPU以外的设备发出的接到NMI和INTR引脚上的中断请求信号引发的，软件中断是由于CPU执行INT n指令而引发的
2）中断类型码的获取方式不同
对于可屏蔽硬件中断，由中断控制器8259A提供；对于非屏蔽硬件中断，自动产生；对于软件中断，由软件中断指令INT n本身提供
3）CPU响应的条件不同
可屏蔽硬件中断是可以被屏蔽的，只有在CPU开中断时才能响应；非屏蔽硬件中断和软件中断不能被屏蔽
4）中断处理程序的结束方式不同
硬件可屏蔽中断服务程序中，中断处理结束后，首先需要向8259A发出中断结束命令，然后执行IRET指令中断返回；
在软件中断服务程序中，中断处理结束后只需执行IRET指令


9-10章

1.传输速率：并行>串行同步>串行异步

2.串行异步通信时数据是从低位到高位传输的
  串行异步通信格式（PPT第7页）
  无数据传送时，通信线长时间逻辑1

3.数据信号速率：每秒传送信号的个数（波特率）
  数据通信速率：每秒传送二进制比特的个数（比特率）
  当采用二进制信号传输时二者相等

4.异步通信中，收发双方必须约定通信速率与数据帧格式必须一致

5.RS232采用负逻辑电平，在串行接口芯片与RS232之间存在电平转换，然后再传输至MODEM
  转换芯片：MC1488（发送方）、MC1489（接收方）

6.8250（串行异步通信接口芯片）
能实现数据串并转换、全双工异步通信，内部有MODEM控制器可直接和MODEM相连
PC有两个串口
主串口COM1（3FXH）、辅串口COM2（2FXH）

一.10个寄存器
（1）发送保持寄存器
	只有它空闲时，CPU才能写入下一个数据

（2）接收缓冲寄存器
	只有它满的时候，CPU才能用IN读取内容

（3）通信线状态寄存器：提供数据传输状态信息
D0：接收数据准备好（接受缓冲器满）标志位，D0=1表示已接收一帧完整数据并放入接收缓冲器
D1~D4：错误标志，只要有一位为1，在中断允许的情况下，8250内部将产生“接受数据错”中断，读取状态寄存器后自动复位
D5：发送保持寄存器空闲标志位,D5=1表示它空闲，CPU可以写入新数据
D6：发送移位寄存器空闲标志位，D6=1表示一帧数据发送完毕（数据由发送保持寄存器移入发送移位寄存器时置0）
D7：恒为0
只有当D0＝1时，CPU才能读数；只有当D5=1或D6=1时（一般只用D5），CPU才能写数据。

寄存器各位置1时，相应的中断允许位也为1
D0=1：产生接收中断
D5=1：产生发送中断
D1~D4=1：产生“字符错”中断

（4）中断允许寄存器
D0=1：允许接收到一帧数据后，内部提出“接收中断请求”
D1=1：允许发送保持寄存器空时，提出“发送中断请求”
D2=1：允许接收出错时，提出“接收数据错中断请求”
D3=1：允许MODEM状态改变时，提出“MODEM中断请求”
D4~D7恒为0

优先级：接收数据错>接收中断>发送中断>MODEM中断

（5）中断识别寄存器：识别是哪个中断源引起的中断
转入中断服务程序之后，读取中断识别寄存器的内容进行判断，然后再转入相应的处理程序
D0：中断指示位，D0=1表示无中断待处理（注意！！！）
D2 D1：中断识别码
 00：MODEM状态改变
 01：发送保持器空
 10：接收数据准备好
 11：接收数据错
D3~D7恒为0，可用于检测8250是否存在

（6）MODEM控制寄存器
D0&D1=1：使DTR&RTS=0，为8250收发作准备
D2=0：PC机用不着
D3=1：8250能送出中断请求
D4：通常置0，设置8250工作在正常收发方式；若置1，则工作在内环自检方式（外环检测是人为将2、3端口接起，D4=0）
D5~D7恒为0

8250中断方式编程措施：
1）设置中断允许寄存器相应位为1
2）MODEM控制寄存器D3置1
3）8259相应屏蔽字置0（主8259的IR3、IR4）
4）写入中断向量
5）STI

（7）除数寄存器（高/低）：设置通信速率
只有当通信线控制寄存器的D7=1，才可访问除数寄存器（见8号寄存器）。通信速率查表

（8）通信线控制寄存器：设置数据格式
D7：寻址位，为1访问除数寄存器，为0访问合用端口地址的非除数寄存器
D6:中止位设置，为1输出长时间中止信号0，为0正常通信，一般为0
D5 D4 D3：校验位选择
  000：无校验位
  001：奇校验
  011：偶校验
  101：校验位恒为1
  111：校验位恒为0
D2：停止位选择
  0：1位
  1（D1 D0=00）：1.5位
  1（D1 D0≠00）：2位
D1 D0：数据位选择
  00：5位
  01：6位
  10：7位
  11：8位

（9）MODEM状态寄存器：反映8250与通信设备之间联络信号的当前状态以及变化情况，编程用不到

二.初始化编程
（1）设置通信线控制寄存器寻址位为1
（2）将除数高/低8位写入除数寄存器，确定通信速率
（3)将D7=0的控制字写入通信线控制寄存器，确定数据格式
（4）设置中断允许寄存器
（5）设置MODEM控制寄存器
	中断方式：D3=1
	查询方式：D3=0
	内环自检：D4=1（应采用查询方式）
	正常通信：D4=0

7.串行通信的外部环境（PPT 第55页）
2→3，7相连
有/无联络线自发自收
有/无联络线点-点全双工
有/无联络线点-点单工

8.通信时应注意数据位数，如小于8位，则收到数据后应用AND消除其他位的影响

9.8255A芯片：并行接口芯片
（1）组成
分为A、B两组
PA7~PA0：A组A口
PC7~PC4：A组C口上半部
PB7~PB0：B组B口
PC3~PC0：B组C口下半部

A口地址：60H
B口地址：61H
C口地址：62H
控制口地址：63H

（2）工作方式
方式0：基本型入/出，适用于A、B、C口
方式1：选通型入/出，适用于A、B口
方式2：双向传输，适用于A口

A口：方式0、1、2
B口：方式0、1
C口：方式0

1）选通型
①选通型输入
A口定义为选通型时
端口和外设有数据线PA7~PA0、联络线IBF（A）和STB（A）
IBF：输入缓冲器满，状态线
STB：选通信号输入

当STB为一个负脉冲时完成数据锁存，通过IBF状态告知CPU可读
只有IBF为0时外设才能写入数据，为1时通知外设不要再送数据

②选通型输出
B口定义为选通型输出时
端口和外设有数据线PB7~PB0、联络线OBF（B）、ACK（B）
OBF：输出缓冲器满，状态线
ACK：确认应答

OBF为负脉冲时，通知外设输出缓冲器已满
外设取走数据后，使ACK为负脉冲，告知CPU数据已取走

2）基本型（即无联络信号）
①基本型输入
B口定义为基本型输入时，对B口执行IN指令，输入数据→CPU

②基本型输出
A口定义为基本型输出时，对A口执行OUT指令，把数据锁存在端口

（3）控制字与初始化编程
1）控制字（必须写入控制口）
①方式选择控制字
D7=1

A组：
  D6 D5：方式选择
	00：方式0
	01：方式1
	1X：方式2

  D4：A口
	1：输入
	0：输出

  D3：C口PC7~PC4
	1：输入
	0：输出

B组：
  D2：方式选择
	0：方式0
	1：方式1
  
  D1：B口
	1：输入
	0：输出

  D0：C口PC3~PC0
	1：输入
	0：输出

注：C口上下半部可以选择不同的入/出（都是方式0，也因此无需控制C口方式）

②C口按位置0/1命令字
D7=0

D6 D5 D4未用

D3 D2 D1：位选择
  0 0 0：PC0
  0 0 1：PC1
  0 1 0：PC2
  0 1 1：PC3
  1 0 0：PC4
  1 0 1：PC5
  1 1 0：PC6
  1 1 1：PC7

D0：PCX置位
  1：PCX置1
  0：PCX置0

2）初始化编程步骤
方式选择命令字→控制口，选择某一口的工作方式
根据需要，C口置0/1命令字→控制口，禁止/允许某一口提出中断

（3）时序
一.方式1输入
1）A口选通型输入
①方式字B0H写入控制口后，A口工作在选通型输入
PA7~PA0：输入线
PC4：自动定义为入线，STB（A）
PC5：自动定义为出线，IBF（A）
PC3：自动定义为出线，INTR（A）

它们不再受方式字D3、D0控制；PC7、PC6空闲，受方式字D3控制

②中断管理
INTE（A）为A口中断允许触发器
C口置0/1命令字使PC4=1时，INTE（A）=1，允许A口中断
C口置0/1命令字使PC4=0时，INTE（A）=0，禁止A口中断
当INTE（A）=1后，若IBF（A）=1，则A口提出中断请求

2）B口选通型输入
①方式字86H写入控制口后，B口工作在选通型输入
PB7~PB0：输入线
PC2：自动定义为入线，STB（B）
PC1：自动定义为出线，IBF（B）
PC0：自动定义为出线，INTR（B）

②中断管理
INTE（B）为B口中断允许触发器
C口置0/1命令字使PC2控制INTE（B）为0/1

方式1输入时，CPU与8255信息交换的方式
可用中断方式、查询方式（查询IBF）

二.方式1输出
1）A口方式1输出
①方式字A0H写入控制字
PA7~PA0：输出线
PC6：自动定义为入线，ACK（A）
PC7：自动定义为出线，OBF（A）
PC3：自动定义为出线，INTR（A）

②中断管理
C口置0/1命令字使PC6控制INTE（A）
INTE（A）=1后，若OBF（A）=1，则A口提出中断

2）B口方式1输出
①方式字84H

PB7~PB0：输出线
PC2：自动定义为入线，ACK（B）
PC1：自动定义为出线，OBF（B）
PC0：自动定义为出线，INTR（B）

C口置0/1命令字使PC2控制INTE（B）
INTE（B）=1后，若OBF=1，则INTR（B）=1，B口提出中断

方式1输出时，查询OBF=1（不满）时可送下一个

二.双向方式
①控制字：11XXXD1 D1 D0
PA7~0是双向的数据线，可以分时完成数据输入/出
PC3自动定义为出线：INTRA
PC7自动定义为出线：OBFA
PC6自动定义为入线：ACKA
PC4自动定义为入线：STBA
PC5自动定义为出线：IBFA
PC2~0空闲

②中断管理
INTE1为双向方式中的输出中断允许触发器
用C口置0/1命令字使PC6置0，则INTE1=0
用C口置0/1命令字使PC6置1，则INTE1=1
INTE1置1后，若OBFA=1，则INTRA=1，提出中断请求

INTE2为双向方式中的输入中断允许触发器
用C口置0/1命令字使PC4置0，则INTE2=0
用C口置0/1命令字使PC4置1，则INTE2=1
INTE2置1后，若IBFA=1，则INTRA=1，提出中断请求


CPU与8255交换信息的方式
・数据口工作在方式0时，CPU采用无条件传送
・数据口工作在方式1、2时，CPU用：
	查询方式：输入查询测试IBF，输出查询测试OBF
	中断方式：由于8255本身不能向CPU回送中断向量，所以必须用从8259IR1管理。

	中断允许触发器
A口方式1入：INTEA--PC4
A口方式1出：INTEA--PC6
B口方式1入：INTEB--PC2
B口方式1出：INTEB--PC2
A口双向入：INTE1--PC4
A口双向出：INTE2--PC6

*（4）初始化编程
1）方式选择命令字→控制口
2）允许中断命令字→控制口（方式1、2）
